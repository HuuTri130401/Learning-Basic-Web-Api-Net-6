@using TranHuuTri.Assignment02.eBookStoreWebAPI.ViewModels.Book;
@using TranHuuTri.Assignment02.Repositories.RequestFeatures;
@model IEnumerable<TranHuuTri.Assignment02.eBookStoreWebAPI.ViewModels.Book.BookVM>
@{
    ViewData["Title"] = "Book Page";
}

<h3>eBookStore/ Books</h3>
<hr />
<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
    <div class="form-actions no-color">
        <p>
            <form asp-action="Index" method="post">
                Find by Book Title: <input type="text" name="searchTerm" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-primary" /> |
                <a asp-action="Index" class="btn btn-primary">Back to Full List</a>
            </form>
        </p>
    </div>
    @ViewBag.StringJson
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PubId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Advance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Royalty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Notes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublisherName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PubId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Advance)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Royalty)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Notes)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PublishedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PublisherName)
                    </td>
                    <td>
                        @if (item.Status == 0)
                        {
                            <span class="text-danger">InActive</span>
                        }
                        else if (item.Status == 1)
                        {
                            <span class="text-success">Active</span>
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new {id=item.Id}, new { @class = "btn btn-primary" }) |
                        @Html.ActionLink("InActive", "DeleteConfired", new {id=item.Id}, new { @class = "btn btn-danger" })
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
@*<div>
    <a asp-action="Index" class="btn btn-primary"
       asp-route-searchTerm="@ViewData["SearchTerm"]"
       asp-route-pageNumber="@(ViewBag.PageNumber - 1)"
       asp-route-pageSize="@ViewBag.PageSize">
        First
    </a>
    <a asp-action="Index" class="btn btn-primary"
       asp-route-searchTerm="@ViewData["SearchTerm"]"
       asp-route-pageNumber="@(ViewBag.PageNumber + 1)"
       asp-route-pageSize="@ViewBag.PageSize">
        Last
    </a>
</div>*@

